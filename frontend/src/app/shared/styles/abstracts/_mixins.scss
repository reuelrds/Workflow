@import './../../../../../../node_modules/@angular/material/theming';

@import './../../../panels/admin-panel/components/apps-management/apps-management-theme.component.scss';
@import './../../../panels/admin-panel/components/admin-panel-theme.component.scss';
@import './../../../panels/admin-panel/components/user-management/user-management-theme.component.scss';
@import './../../../panels/admin-panel/components/user-management/dialogs/group-dialog/dialog/add-group-dialog/add-group-dialog-theme.component.scss';
@import './../../../panels/admin-panel/components/apps-management/dialogs/create-app/create-app-theme.component.scss';
@import './../../../panels/admin-panel/components/apps-management/dialogs/create-app/design-form/design-form-theme.component.scss';

@mixin respond($breakpoint) {
  @if $breakpoint == 'phone-m' {
    @media only screen and (max-width: 23.44em) {
      @content;
    }
  }
  @if $breakpoint == 'mobile-l' {
    @media only screen and (max-width: 26.56em) {
      @content;
    }
  }
  @if $breakpoint == 'phone' {
    @media only screen and (max-width: 48em) {
      @content;
    }
  }
  @if $breakpoint == 'tab-pot' {
    @media only screen and (max-width: 64em) {
      @content;
    }
  }
  @if $breakpoint == 'tab-land' {
    @media only screen and (max-width: 75em) {
      @content;
    }
  }
  @if $breakpoint == 'big-desktop' {
    @media only screen and (min-width: 200em) {
      @content;
    }
  }
}

// Define a mixin that accepts a theme and outputs the theme-specific styles.
@mixin theme-colors($theme) {
  // Extract the palettes you need from the theme definition.
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);

  @include admin-panel-theme($theme);
  @include apps-management-theme($theme);
  @include user-management-theme($theme);
  @include add-group-dialog-theme($theme);
  @include create-app-theme($theme);
  @include design-form-theme($theme);


  // Define any styles affected by the theme.
  .dark-theme {

    // color: mat-color($primary);
    // background-color: mat-color($background, background) !important;
  }
}